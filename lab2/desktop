	.arch armv8-a
	.data
	.align	3
n:
	.word	3
m:
	.word	5
matrix:
	.quad	4, 6, 1, 8, 2
	.quad	1, 2, 3, 4, 5
	.quad	0, -7, 3, -1, -1
maxs:
	.skip	40
mas2:
	.quad 0,1,2,3,4

	.text
	.align	2
	.global	_start
	.type	_start, %function 
_start:
	adr x2, n
	mov x0, #0
	ldr w0, [x2]
	adr x2, m
	mov x1, #0
	ldr w1, [x2]
	adr x2, matrix
	adr x3, maxs
	adr x13, mas2
	mov x4, #0
	lsr x11, x1, #1     // x11 i x12 - granitsi dereva (vmesto x2 i x3)
	lsr x21, x1, #1
	sub x12, x1, #1
	sub x22, x1, #1

L0:
	cmp x4, x1
	bge L3
	mov x5, #0
	lsl x6, x4, #3
	ldr x7, [x2, x6]
	add x6, x6, x1, lsl #3
	add x5, x5, #1
L1:
	cmp x5, x0
	bge L2
	ldr x8, [x2, x6]
	add x6, x6, x1, lsl #3
	add x5, x5, #1
	cmp x7, x8
	bge L1
	mov x7, x8
	b 	L1
L2:
	str x7, [x3, x4, lsl #3]
	add x4, x4, #1
	b 	L0
L3:           						 // --------------------------------------------------------    heap sort
	cbz x11, L4
	sub x11, x11, #1
	sub x21, x21, #1
	b   L5
L4:
	cbz x12, M                         // x3 - adres nachala massiva (vmesto x1)
	ldr x7, [x3, x11, lsl #3]            // x7 i x8 - vrode tozhe norm
	ldr x17, [x13, x21, lsl #3]

	ldr x8, [x3, x12, lsl #3]
	ldr x18, [x13, x22, lsl #3]

	str x7, [x3, x12, lsl #3]
	str x17, [x13, x22, lsl #3]
	str x8, [x3, x11, lsl #3]
	str x18, [x13, x21, lsl #3]

	sub x12, x12, #1
	sub x22, x22, #1
	cbz x12, M
L5:
	ldr x7, [x3, x11, lsl #3]
	ldr x17, [x13, x21, lsl #3]

	mov x5, x11                         //x5 - vsyo norm
	mov x15, x21
L6:
	mov x4, x5              //x4 - vsyo norm
	mov x14, x15

	lsl x5, x5, #1
	lsl x15, x15, #1

	add x5, x5, #1
	add x15, x15, #1

	cmp x5, x12
	bgt L8

	ldr x8, [x3, x5, lsl #3]
	ldr x18, [x13, x15, lsl #3]

	beq L7
	add x6, x5, #1              //x6 - vsyo norm
	add x16, x15, #1 

	ldr x9, [x3, x6, lsl #3]
	ldr x19, [x13, x16, lsl #3]

	cmp x8, x9
	bge L7

	add x5, x5, #1
	add x15, x15, #1

	mov x8, x9
L7:
	cmp x7, x8
	bge L8

	str x8, [x3, x4, lsl #3]
	str x18, [x13, x14, lsl #3]
	b L6		
L8:
	str x7, [x3, x4, lsl #3]
	str x17, [x13, x14, lsl #3]
	b L3
//--------------------------------------------------------------------------------------------------

M:
	adr x0, mas2
	adr x1, matrix
	adr x10, n
	mov x2, #0
	ldr w2, [x10]
	uxtw x2, w2
	adr x10, m
	mov x3, #0
	ldr w3, [x10]
	uxtw x3, w3
	mov x4, #0

M1:
	cmp x4, x3
	bge exit
	mov x5, #0
	ldr x6, [x0, x4, lsl #3]
	mul x7, x4, x2
	add x17, x1, x7, lsl #3
	add x4, x4, #1
	mul x6, x6, x2
	add x16, x1, x6, lsl #3

M2:
	cmp x5, x2
	bgt M1
	ldr x8, [x17, x5, lsl #3]
	ldr x9, [x16, x5, lsl #3]
	str x8, [x16, x5, lsl #3]
	str x9, [x17, x5, lsl #3]
	add x5, x5, #1
	b M2
exit:
	mov x0, #0
	mov x8, #93
	svc #0
	.size	_start, .-_start
